auc_median[m,5] = auc_median[m,4]/auc_median[1,4]
m=m+1
}
m=1
n = n_train_total
nn=seq(1,max(n_train_sets)*2+50,1)
group2=c("SD-tfe","SD-True")
newx = data.frame(n=nn)
auc_median <- data.frame(Seed=group, sdDvByMean_median_tfe=rep(0,length(group)), ratio_tfe=rep(0,length(group)), sdDvByMean_median_trainft=rep(0,length(group)), ratio_trainft=rep(0,length(group)))
m=1
for(n0_train in group){
auc_median[m,2] = median(auc_tfs.sum[auc_tfs.sum[,2]==n0_train,][,5]/auc_tfs.sum[auc_tfs.sum[,2]==n0_train,][,4])
auc_median[m,4] = median(auc_trainft.sum[auc_trainft.sum[,2]==n0_train,][,5]/auc_trainft.sum[auc_trainft.sum[,2]==n0_train,][,4])
auc_median[m,3] = auc_median[m,2]/auc_median[1,2]
auc_median[m,5] = auc_median[m,4]/auc_median[1,4]
m=m+1
}
n = n_train_total
nn=seq(1,max(n_train_sets)*2+50,1)
group2=c("SD-tfe","SD-True")
newx = data.frame(n=nn)
1/t(auc_median)[2,]
t(auc_median)[2,]
n
z <- nls(n ~ a*t(auc_median)[2,]^b+c, start = list(a=1, b=1, c=1))
x = t(auc_median)[2,]
z <- nls(x ~ a*n^b+c, start = list(a=1, b=1, c=1))
z
predict(z,newx)
z <- nls(t(auc_median)[2,] ~ a*n^b+c, start = list(a=1, b=1, c=1))
newx = data.frame(n=nn)
# fit.tfe = lm(1/t(auc_median)[2,]~n)
# fit.true = lm(1/t(auc_median)[4,]~n)
#
# predy.tfe=1/predict(fit.tfe,newx)
# predy.true=1/predict(fit.true,newx)
y_tfe = t(auc_median)[2,]
y_true = t(auc_median)[4,]
fit.tfe = nls(y_tfe ~ a*n^b+c, start = list(a=1, b=1, c=1))
fit.true = nls(y_true ~ a*n^b+c, start = list(a=1, b=1, c=1))
predy.tfe=predict(fit.tfe,newx)
fit.true = nls(y_true ~ a*n^b+c, start = list(a=1, b=1, c=1), control = list(maxiter = 500))
fit.tfe = nls(y_tfe ~ a*n^b+c, start = list(a=1, b=1, c=1), control = list(maxiter = 500))
fit.tfe
fit.true = nls(y_true ~ a*n^b+c, start = list(a=1, b=1, c=1), control = list(maxiter = 500, minFactor = 1/102400))
fit.true = nls(y_true ~ a*n^b+c, start = list(a=1, b=1, c=1), control = list(maxiter = 5000, minFactor = 1/102400))
fit.true = nls(y_true ~ a*n^b+c, start = list(a=1, b=1, c=1), control = list(maxiter = 5000, minFactor = 1/10240000))
fit.true = nls(y_true ~ a*n^b+c, start = list(a=1, b=1, c=1), control = list(maxiter = 5000000, minFactor = 1/10240000))
predy.tfe=predict(fit.tfe,newx)
predy.tfe
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=1, b=1, c=1), control = list(maxiter = 500))
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=1, b=-1, c=1), control = list(maxiter = 500))
predy.tfe=predict(fit.tfe,newx)
fit.tfe
fit.true = nls(y_true ~ a*n^(-b)+c, start = list(a=1, b=-1, c=1), control = list(maxiter = 500))
fit.tfe = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=-1, c=1), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, b=-1, c=1), control = list(maxiter = 500))
fit.tfe = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=-1, c=0), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, b=-1, c=0), control = list(maxiter = 500))
y_tfe
fit.tfe = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=1, c=0), control = list(maxiter = 500))
predy.tfe=predict(fit.tfe,newx)
SD <-data.frame(
sd = c(t(auc_median)[2,],t(auc_median)[4,]),
size = rep(n,2),
Class = rep(group2,each=num_of_train_set)
)
fit.tfe = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=1, c=0), control = list(maxiter = 500))
fit.true = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=1, c=0), control = list(maxiter = 500))
predy.tfe=predict(fit.tfe,newx)
predy.true=predict(fit.true,newx)
SD <-data.frame(
sd = c(t(auc_median)[2,],t(auc_median)[4,]),
size = rep(n,2),
Class = rep(group2,each=num_of_train_set)
)
SD.pred <-data.frame(
sd = c(predy.tfe,predy.true),
nn = rep(nn,2),
Class = rep(group2,each=length(nn))
)
pdf(file=paste(model[i],"plot2.pdf",sep="_"),width=10,height=6)
plot(ggplot(data = SD, aes(x = size, y = sd, group=Class,color=Class))+
geom_point()+
geom_line(data = SD.pred, aes(x=nn, y=sd,group=Class,color=Class))+ labs(x = "Size of training data",y="Median of (std. of AUC / mean of AUC)",title = "Standard deviation of AUC")+
theme_bw()+theme(plot.title = element_text(hjust = 0.5),legend.position="bottom"))
dev.off()
fit.tfe = nls(y_tfe ~ a*n^(-1)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.true = nls(y_tfe ~ a*n^(-1)+c, start = list(a=1, c=0), control = list(maxiter = 500))
predy.tfe=predict(fit.tfe,newx)
predy.true=predict(fit.true,newx)
fit.tfe = nls(y_tfe ~ a*n^(-1)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(-1)+c, start = list(a=1, c=0), control = list(maxiter = 500))
predy.tfe=predict(fit.tfe,newx)
predy.true=predict(fit.true,newx)
SD <-data.frame(
sd = c(t(auc_median)[2,],t(auc_median)[4,]),
size = rep(n,2),
Class = rep(group2,each=num_of_train_set)
)
SD.pred <-data.frame(
sd = c(predy.tfe,predy.true),
nn = rep(nn,2),
Class = rep(group2,each=length(nn))
)
pdf(file=paste(model[i],"plot2.pdf",sep="_"),width=10,height=6)
plot(ggplot(data = SD, aes(x = size, y = sd, group=Class,color=Class))+
geom_point()+
geom_line(data = SD.pred, aes(x=nn, y=sd,group=Class,color=Class))+ labs(x = "Size of training data",y="Median of (std. of AUC / mean of AUC)",title = "Standard deviation of AUC")+
theme_bw()+theme(plot.title = element_text(hjust = 0.5),legend.position="bottom"))
dev.off()
SD.pred <-data.frame(
sd = c(predy.tfe,predy.true),
nn = rep(nn,2),
Class = rep(group2,each=length(nn))
)
pdf(file=paste(model[i],"plot2.pdf",sep="_"),width=10,height=6)
plot(ggplot(data = SD, aes(x = size, y = sd, group=Class,color=Class))+
geom_point()+
geom_line(data = SD.pred, aes(x=nn, y=sd,group=Class,color=Class))+ labs(x = "Size of training data",y="Median of (std. of AUC / mean of AUC)",title = "Standard deviation of AUC")+
theme_bw()+theme(plot.title = element_text(hjust = 0.5),legend.position="bottom"))
dev.off()
fit.tfe
fit.tfe = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=1, c=0), control = list(maxiter = 500))
fit.tfe
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, b=1, c=0), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, b=-1, c=0), control = list(maxiter = 500))
fit.tfe = nls(y_tfe ~ a*n^(-2)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(-2)+c, start = list(a=1, c=0), control = list(maxiter = 500))
predy.tfe=predict(fit.tfe,newx)
predy.true=predict(fit.true,newx)
SD <-data.frame(
sd = c(t(auc_median)[2,],t(auc_median)[4,]),
size = rep(n,2),
Class = rep(group2,each=num_of_train_set)
)
SD.pred <-data.frame(
sd = c(predy.tfe,predy.true),
nn = rep(nn,2),
Class = rep(group2,each=length(nn))
)
pdf(file=paste(model[i],"plot2.pdf",sep="_"),width=10,height=6)
plot(ggplot(data = SD, aes(x = size, y = sd, group=Class,color=Class))+
geom_point()+
geom_line(data = SD.pred, aes(x=nn, y=sd,group=Class,color=Class))+ labs(x = "Size of training data",y="Median of (std. of AUC / mean of AUC)",title = "Standard deviation of AUC")+
theme_bw()+theme(plot.title = element_text(hjust = 0.5),legend.position="bottom"))
dev.off()
fit.tfe
fit.tfe = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=1, c=0), control = list(maxiter = 500), alg = "plinear")
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, b=1, c=0), control = list(maxiter = 500), alg = "plinear")
fit.tfe = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=-1, c=0), control = list(maxiter = 500), alg = "plinear")
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, b=-1, c=0), control = list(maxiter = 500), alg = "plinear")
fit.tfe = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=1, c=0), control = list(maxiter = 500), alg = "plinear")
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, b=1, c=0), control = list(maxiter = 500), alg = "plinear")
fit.tfe = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=-1, c=0), control = list(maxiter = 500), alg = "plinear")
fit.tfe = nls(y_tfe ~ a*n^(b)+c, start = list(a=1, b=-1, c=0), control = list(maxiter = 500))
fit.tfe = nls(y_tfe ~ a*n^(-0.5)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(-0.5)+c, start = list(a=1, c=0), control = list(maxiter = 500), alg = "plinear")
predy.tfe=predict(fit.tfe,newx)
fit.tfe = nls(y_tfe ~ a*n^(-1)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(-1)+c, start = list(a=1, c=0), control = list(maxiter = 500), alg = "plinear")
predy.tfe=predict(fit.tfe,newx)
fit.true = nls(y_true ~ a*n^(-1)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(-0.5)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.tfe = nls(y_tfe ~ a*n^(-0.5)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(-0.5)+c, start = list(a=1, c=0), control = list(maxiter = 500))
predy.tfe=predict(fit.tfe,newx)
predy.true=predict(fit.true,newx)
SD <-data.frame(
sd = c(t(auc_median)[2,],t(auc_median)[4,]),
size = rep(n,2),
Class = rep(group2,each=num_of_train_set)
)
SD.pred <-data.frame(
sd = c(predy.tfe,predy.true),
nn = rep(nn,2),
Class = rep(group2,each=length(nn))
)
pdf(file=paste(model[i],"plot2.pdf",sep="_"),width=10,height=6)
plot(ggplot(data = SD, aes(x = size, y = sd, group=Class,color=Class))+
geom_point()+
geom_line(data = SD.pred, aes(x=nn, y=sd,group=Class,color=Class))+ labs(x = "Size of training data",y="Median of (std. of AUC / mean of AUC)",title = "Standard deviation of AUC")+
theme_bw()+theme(plot.title = element_text(hjust = 0.5),legend.position="bottom"))
dev.off()
fit.tfe
fit.tfe = nls(y_tfe ~ a*n^(-1)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.tfe
fit.tfe = nls2(y_tfe ~ a*n^(-1)+c, start = list(a=1, c=0), control = list(maxiter = 500))
install.packages("nls2")
library(nls2)
fit.tfe = nls2(y_tfe ~ a*n^(-1)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.tfe = nls2(y_tfe ~ a*n^(b)+c, start = list(a=1,b=-1, c=0), control = list(maxiter = 500))
fit.tfe = nls2(y_tfe ~ a*n^(b)+c, start = list(a=1,b=-1, c=0), algorithm="brute-force", control = list(maxiter = 500))
fit.tfe
fit.tfe = nls2(y_tfe ~ a*n^(b)+c, start = list(a=0.5 ,b=-1, c=0), algorithm="brute-force", control = list(maxiter = 500))
fit.tfe
fit.tfe = nls2(y_tfe ~ a*n^(b)+c, start = list(a=0.5 ,b=-1, c=0), algorithm="random-search", control = list(maxiter = 500))
fit.tfe
fit.tfe = nls(y_tfe ~ a*n^(-0.5)+c, start = list(a=0.5, c=0), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(-0.5)+c, start = list(a=1, c=0), control = list(maxiter = 500))
fit.tfe = nls(y_tfe ~ a*n^(-0.1)+c, start = list(a=0.5, c=0), control = list(maxiter = 500))
fit.true = nls(y_true ~ a*n^(-0.1)+c, start = list(a=1, c=0), control = list(maxiter = 500))
for i in 1:50:
for i in seq(from=0, to=4, by=0.1):
seq(from=0, to=4, by=0.1)
for (i in seq(from=0, to=4, by=0.1)){}
fit.tfe
View(fit.tfe)
View(fit.tfe)
fit.tfe$m$getPars(environment(dev))
fit.tfe$m$getPars(environment())
environment(fit.tfe[["m"]][["getPars"]])
environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
rss_tfe = 0
b_tfe = 0
rss_true = 0
b_true = 0
for (b in seq(from=0, to=4, by=0.1)){
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0){rss_tfe = environment(fit.tfe[["m"]][["getPars"]])}
else{
if(environment(fit.tfe[["m"]][["getPars"]])<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, c=0))
if(b==0){rss_true = environment(fit.true[["m"]][["getPars"]])}
else{
if(environment(fit.true[["m"]][["getPars"]])<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])
b_true = b
}
}
}
for (b in seq(from=0, to=4, by=0.1)){
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0){rss_tfe = environment(fit.tfe[["m"]][["getPars"]])}
else{
if(environment(fit.tfe[["m"]][["getPars"]])<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, c=0))
if(b==0){rss_true = environment(fit.true[["m"]][["getPars"]])}
else{
if(environment(fit.true[["m"]][["getPars"]])<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])
b_true = b
}
}
}
for (b in seq(from=0.1, to=4, by=0.1)){
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0){rss_tfe = environment(fit.tfe[["m"]][["getPars"]])}
else{
if(environment(fit.tfe[["m"]][["getPars"]])<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, c=0))
if(b==0){rss_true = environment(fit.true[["m"]][["getPars"]])}
else{
if(environment(fit.true[["m"]][["getPars"]])<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])
b_true = b
}
}
}
rss_tfe
b_true = 0
for (b in seq(from=0.1, to=4, by=0.1)){
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0.1){rss_tfe = environment(fit.tfe[["m"]][["getPars"]])}
else{
if(environment(fit.tfe[["m"]][["getPars"]])<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, c=0))
if(b==0.1){rss_true = environment(fit.true[["m"]][["getPars"]])}
else{
if(environment(fit.true[["m"]][["getPars"]])<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])
b_true = b
}
}
}
environment(fit.true[["m"]][["getPars"]])
environment(fit.true[["m"]][["getPars"]])
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
for (b in seq(from=0.1, to=4, by=0.1)){
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0.1){rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]}
else{
if(environment(fit.tfe[["m"]][["getPars"]])[["dev"]]<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, c=0))
if(b==0.1){rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]}
else{
if(environment(fit.true[["m"]][["getPars"]])[["dev"]]<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]
b_true = b
}
}
}
for (b in seq(from=0, to=4, by=0.1)){
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0.1){rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]}
else{
if(environment(fit.tfe[["m"]][["getPars"]])[["dev"]]<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, c=0))
if(b==0.1){rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]}
else{
if(environment(fit.true[["m"]][["getPars"]])[["dev"]]<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]
b_true = b
}
}
}
for (b in seq(from=0.1, to=4, by=0.1)){
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0.1){rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]}
else{
if(environment(fit.tfe[["m"]][["getPars"]])[["dev"]]<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, c=0))
if(b==0.1){rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]}
else{
if(environment(fit.true[["m"]][["getPars"]])[["dev"]]<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]
b_true = b
}
}
}
rss_tfe
b_tfe
b_true
for (b in seq(from=0.1, to=4, by=0.1)){
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0.1){rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]}
else{
print(environment(fit.tfe[["m"]][["getPars"]])[["dev"]])
if(environment(fit.tfe[["m"]][["getPars"]])[["dev"]]<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, c=0))
if(b==0.1){rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]}
else{
if(environment(fit.true[["m"]][["getPars"]])[["dev"]]<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]
b_true = b
}
}
}
for (b in seq(from=0.01, to=4, by=0.01)){
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0.01){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
else{
if(environment(fit.tfe[["m"]][["getPars"]])[["dev"]]<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, c=0))
if(b==0.01){
rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
else{
if(environment(fit.true[["m"]][["getPars"]])[["dev"]]<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]
b_true = b
}
}
}
b_tfe
b_true
for (b in seq(from=0.01, to=4, by=0.01)){
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0.01){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
else{
if(environment(fit.tfe[["m"]][["getPars"]])[["dev"]]<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(b)+c, start = list(a=1, c=0))
if(b==0.01){
rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]
b_true = b
}
else{
if(environment(fit.true[["m"]][["getPars"]])[["dev"]]<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]
b_true = b
}
}
}
b_true
fit.true = nls(y_true ~ a*n^(b_true)+c, start = list(a=1, c=0))
fit.true
fit.true = nls(y_true ~ a*n^(-b_true)+c, start = list(a=1, c=0))
fit.true
b_true
fit.tfe = nls(y_tfe ~ a*n^(-b), start = list(a=0.5, b=0.1))
fit.true = nls(y_true ~ a*n^(-b), start = list(a=1, b=0.1))
fit.tfe
fit.true
rss_tfe
SD <-data.frame(
sd = c(t(auc_median)[2,],t(auc_median)[4,]),
size = rep(n,2),
Class = rep(group2,each=num_of_train_set)
)
predy.tfe=predict(fit.tfe,newx)
predy.true=predict(fit.true,newx)
SD <-data.frame(
sd = c(t(auc_median)[2,],t(auc_median)[4,]),
size = rep(n,2),
Class = rep(group2,each=num_of_train_set)
)
SD.pred <-data.frame(
sd = c(predy.tfe,predy.true),
nn = rep(nn,2),
Class = rep(group2,each=length(nn))
)
pdf(file=paste(model[i],"plot2.pdf",sep="_"),width=10,height=6)
plot(ggplot(data = SD, aes(x = size, y = sd, group=Class,color=Class))+
geom_point()+
geom_line(data = SD.pred, aes(x=nn, y=sd,group=Class,color=Class))+ labs(x = "Size of training data",y="Median of (std. of AUC / mean of AUC)",title = "Standard deviation of AUC")+
theme_bw()+theme(plot.title = element_text(hjust = 0.5),legend.position="bottom"))
dev.off()
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, b=0.1, c=1))
fit.true = nls(y_true ~ a*n^(-b)+c, start = list(a=1, b=0.1, c=1))
fit.true
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=1, b=0.1, c=1))
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=10, b=0.1, c=1))
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=1, b=0.1, c=1))
rss_tfe = 0
b_tfe = 0
rss_true = 0
b_true = 0
for (b in seq(from=0.01, to=4, by=0.01)){
print(b)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=0.5, c=0))
if(b==0.01){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
else{
if(environment(fit.tfe[["m"]][["getPars"]])[["dev"]]<rss_tfe){
rss_tfe = environment(fit.tfe[["m"]][["getPars"]])[["dev"]]
b_tfe = b
}
}
fit.true = nls(y_true ~ a*n^(-b)+c, start = list(a=1, c=0))
if(b==0.01){
rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]
b_true = b
}
else{
if(environment(fit.true[["m"]][["getPars"]])[["dev"]]<rss_true){
rss_true = environment(fit.true[["m"]][["getPars"]])[["dev"]]
b_true = b
}
}
}
b_true
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=1, b=0.1, c=1))
fit.true = nls(y_true ~ a*n^(-b)+c, start = list(a=1, b=0.1, c=1))
fit.true
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=1, b=1, c=1))
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=1, b=0.1, c=1))
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=1, b=0.1, c=1), control = list(maxiter = 500, minFactor=1/10240000))
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=1, b=0.1, c=1), control = list(maxiter = 500, minFactor=1/10240000), trace = True)
fit.tfe = nls(y_tfe ~ a*n^(-b)+c, start = list(a=1, b=0.1, c=1), control = list(maxiter = 500, minFactor=1/10240000), trace = T)
fit.tfe = nls(y_tfe ~ a*n^(-b), start = list(a=0.5, b=0.1))
fit.true = nls(y_true ~ a*n^(-b), start = list(a=1, b=0.1))
fit.tfe
fit.true
